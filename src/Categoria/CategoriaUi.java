/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Categoria;

import DataBase.ConectoBD;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Alberto
 */
public class CategoriaUi extends javax.swing.JFrame {

    DecimalFormat decimal = new DecimalFormat("###,###,###.##");
    int condicion = 0;
    DefaultTableModel tabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            return false;
        }
    };

    /**
     * Creates new form CategoriaUi
     */
    public CategoriaUi() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 255, 255));
        bloqueo_general();
        jTable1.setModel(tabla);
        jTable1.setVisible(true);
        cargarTitulos();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbAgregar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtidCat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtDescripcion = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jtBusqueda = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jbAceptar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CATEGORIA DE PRODUCTOS");

        jbAgregar.setBackground(new java.awt.Color(69, 99, 123));
        jbAgregar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jbAgregar.setText("AGREGAR");
        jbAgregar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbModificar.setBackground(new java.awt.Color(69, 99, 123));
        jbModificar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(255, 255, 255));
        jbModificar.setText("MODIFICAR");
        jbModificar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setBackground(new java.awt.Color(69, 99, 123));
        jbEliminar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbEliminar.setText("ELIMINAR");
        jbEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)), "Detalle de la Clasificaci√≥n", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Monospaced", 0, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nombre:");

        jtNombre.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtNombreKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Codigo:");

        jtidCat.setEditable(false);
        jtidCat.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtidCat.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtidCat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jtidCat.setEnabled(false);
        jtidCat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtidCatKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Descripcion:");

        jtDescripcion.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtDescripcion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtDescripcionKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtidCat, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(217, 217, 217))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtidCat, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)), "Busqueda de Clasificaciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Monospaced", 0, 13), new java.awt.Color(51, 51, 51))); // NOI18N

        jtBusqueda.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBusqueda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtBusquedaActionPerformed(evt);
            }
        });
        jtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtBusquedaKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(255, 102, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Busqueda:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtBusqueda)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jbAceptar.setBackground(new java.awt.Color(69, 99, 123));
        jbAceptar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbAceptar.setForeground(new java.awt.Color(255, 255, 255));
        jbAceptar.setText("ACEPTAR");
        jbAceptar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jbCancelar.setBackground(new java.awt.Color(69, 99, 123));
        jbCancelar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jbCancelar.setText("CANCELAR");
        jbCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(69, 99, 123));
        jbSalir.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("SALIR");
        jbSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(225, 225, 225))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(360, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        condicion = 1;
        jTable1.setEnabled(false);
        jtBusqueda.setEnabled(false);
        jtNombre.setEnabled(true);
        jtNombre.setText("");
        jtBusqueda.setText("");
        jbAgregar.setEnabled(false);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        jtNombre.requestFocus();
        int maxCategoriaId = maxId();
        jtidCat.setText(Integer.toString(maxCategoriaId));
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        condicion = 2;
        jTable1.setEnabled(true);
        jtBusqueda.setEnabled(true);
        jtNombre.setEnabled(true);
        jtNombre.setText("");
        jtBusqueda.setText("");
        limpiarTabla(jTable1.getRowCount());
        jbAgregar.setEnabled(true);
        jbModificar.setEnabled(false);
        jbEliminar.setEnabled(true);
        cargar_todo();
        jtBusqueda.requestFocus();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        condicion = 3;
        jTable1.setEnabled(true);
        jtBusqueda.setEnabled(true);
        jtNombre.setEnabled(false);
        jtNombre.setText("");
        jtBusqueda.setText("");
        limpiarTabla(jTable1.getRowCount());
        jbAgregar.setEnabled(true);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(false);
        cargar_todo();
        jtBusqueda.requestFocus();
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyTyped
        char c4 = evt.getKeyChar();
        if (jtNombre.getText().length() >= 70) {
            evt.consume();
            getToolkit().beep();
        } else {
            boolean b = true;
            String letra = Character.toString(c4);
            String lineIwant = letra;
            String caracteres_permitidos = "[,\"\"/*--+@!?!¬ø¬°|¬∞'#&^%$()=|;:]";
            b = lineIwant.matches(caracteres_permitidos);
            if (b == true) {
                evt.consume();
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_jtNombreKeyTyped

    private void jtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtBusquedaActionPerformed

    private void jtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBusquedaKeyReleased
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(tabla);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(jtBusqueda.getText().toUpperCase()));
    }//GEN-LAST:event_jtBusquedaKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_dat = conectar.listar("nombre", "categoria",
                    "where idcategoria = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            rs_dat.next();
            jtNombre.setText(rs_dat.getString(1));
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed

        if (condicion == 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna operaci√≥n a realizar!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (condicion == 1) {
            guardar();
        }

        if (condicion == 2) {
            modificar();
        }

        if (condicion == 3) {
            eliminar();
        }

    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        condicion = 0;
        jbAgregar.setEnabled(true);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        bloqueo_general();
        jtNombre.setText("");
        jtBusqueda.setText("");
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtidCatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtidCatKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtidCatKeyTyped

    private void jtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDescripcionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtDescripcionKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoriaUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoriaUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoriaUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoriaUi().setVisible(true);
            }
        });
    }

    public void limpiarTabla(int filas) {
        try {
            if (filas > 0) {
                tabla.setRowCount(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }

    public void cargar_todo() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            limpiarTabla(jTable1.getRowCount());
            ResultSet rs_dat = conectar.listarSinCondi("idcategoria,nombre,descripcion", "categoria");
            while (rs_dat.next() == true) {
                String datos[] = new String[2];
                datos[0] = rs_dat.getString(1);
                datos[1] = rs_dat.getString(2).toUpperCase();
                tabla.addRow(datos);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    private void cargarTitulos() {

        String[] titulos;
        try {
            titulos = new String[2];
            titulos[0] = "Id. Categoria";
            titulos[1] = "Nombre";
            tabla.setColumnIdentifiers(titulos);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No carga lista de planilla" + e.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }

    }

    public void bloqueo_general() {
        jTable1.setEnabled(false);
        jtBusqueda.setEnabled(false);
        jtNombre.setEnabled(false);
    }

    public boolean control_codigo() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        boolean resp = true;
        try {
            ResultSet rs_codigo = conectar.listar("*", "categoria",
                    "where nombre = '" + jtNombre.getText() + "'");
            if (rs_codigo.next() == true) {
                resp = true;
            } else {
                resp = false;
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
        return resp;
    }

    public boolean control_campos_obligatorios() {
        boolean resp = true;

        if (jtNombre.getText().equals("")) {
            resp = false;
        }

        return resp;
    }

    public void guardar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            if (control_campos_obligatorios() == true) {
                if (control_codigo() == false) {
                    conectar.guardar("categoria(idcategoria,nombre,descripcion)",
                            "'" + jtidCat.getText() + "','"
                            + jtNombre.getText() + "','"
                            + jtDescripcion.getText() + "'");
                    JOptionPane.showMessageDialog(null, "Categoria cargada con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    condicion = 0;
                    jbAgregar.setEnabled(true);
                    bloqueo_general();
                    jtidCat.setText("");
                    jtNombre.setText("");
                    jtDescripcion.setText("");
                    jtBusqueda.setText("");
                    jbAgregar.setEnabled(true);
                    jbModificar.setEnabled(true);
                    jbEliminar.setEnabled(true);
                    limpiarTabla(jTable1.getRowCount());
                } else {
                    JOptionPane.showMessageDialog(null, "El Nombre de esta clasificaci√≥n ya existe!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void modificar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            if (control_campos_obligatorios() == true) {
                if (control_codigo() == false) {
                    conectar.actualizar("categoria",
                            "nombre = '" + jtNombre.getText() + "'",
                            "idmarca = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
                    JOptionPane.showMessageDialog(null, "Clasificaci√≥n modificada con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    condicion = 0;
                    jbAgregar.setEnabled(true);
                    bloqueo_general();
                    jtNombre.setText("");
                    jtBusqueda.setText("");
                    jbAgregar.setEnabled(true);
                    jbModificar.setEnabled(true);
                    jbEliminar.setEnabled(true);
                    limpiarTabla(jTable1.getRowCount());
                } else {
                    JOptionPane.showMessageDialog(null, "El Nombre de esta clasificaci√≥n ya existe!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void eliminar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            conectar.actualizar("categoria",
                    "idcategoria = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            JOptionPane.showMessageDialog(null, "Categoria eliminada con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            condicion = 0;
            jbAgregar.setEnabled(true);
            bloqueo_general();
            jtNombre.setText("");
            jtBusqueda.setText("");
            jbAgregar.setEnabled(true);
            jbModificar.setEnabled(true);
            jbEliminar.setEnabled(true);
            limpiarTabla(jTable1.getRowCount());
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    private int maxId() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        int maxValue = 0;
        try {
            ResultSet max = conectar.Maximo("idcategoria", "categoria");
            if (max.next()) {
                maxValue = max.getInt(1);
            }
            max.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        conectar.Desconectado();
        return maxValue;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTextField jtBusqueda;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtidCat;
    // End of variables declaration//GEN-END:variables
}
