/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Productos;

import DataBase.ConectoBD;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author i5
 */
public class ProductoUI extends javax.swing.JFrame {

    DecimalFormat decimal = new DecimalFormat("###,###,###.##");
    int condicion = 0;
    String estado;
    DefaultTableModel tabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            return false;
        }
    };

    /**
     * Creates new form ProductoUI
     */
    public ProductoUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbAceptar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jtBusqueda = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        jtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcCategoria = new javax.swing.JComboBox();
        jtVenta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jtCantidad = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcProveedor = new javax.swing.JComboBox();
        jbAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PRODUCTOS");

        jbSalir.setBackground(new java.awt.Color(69, 99, 123));
        jbSalir.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("SALIR");
        jbSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbBuscar.setBackground(new java.awt.Color(69, 99, 123));
        jbBuscar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jbBuscar.setText("BUSCAR");
        jbBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbBuscarMouseClicked(evt);
            }
        });
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        jbBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbBuscarKeyPressed(evt);
            }
        });

        jbModificar.setBackground(new java.awt.Color(69, 99, 123));
        jbModificar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(255, 255, 255));
        jbModificar.setText("MODIFICAR");
        jbModificar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setBackground(new java.awt.Color(69, 99, 123));
        jbEliminar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbEliminar.setText("ELIMINAR");
        jbEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbAceptar.setBackground(new java.awt.Color(69, 99, 123));
        jbAceptar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbAceptar.setForeground(new java.awt.Color(255, 255, 255));
        jbAceptar.setText("ACEPTAR");
        jbAceptar.setToolTipText("");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jbCancelar.setBackground(new java.awt.Color(69, 99, 123));
        jbCancelar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jbCancelar.setText("CANCELAR");
        jbCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busqueda de Producto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jtBusqueda.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBusqueda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtBusquedaKeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(255, 102, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Busqueda:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jtBusqueda))
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalle Producto", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Código:");

        jtCodigo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCodigoKeyTyped(evt);
            }
        });

        jtDescripcion.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jtDescripcion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtDescripcionKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Descripción:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Categoria:");

        jcCategoria.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jcCategoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jcCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jcCategoria.setDoubleBuffered(true);
        jcCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCategoriaActionPerformed(evt);
            }
        });

        jtVenta.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtVenta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtVentaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtVentaKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Precio de Venta:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Gs.");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("Nombre:");

        jtNombre.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtNombreKeyTyped(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Gs.");

        jtCantidad.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jtCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCantidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtCantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCantidadKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Cantidad:");
        jLabel20.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Proveedor:");

        jcProveedor.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jcProveedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(205, 205, 205)
                                        .addComponent(jLabel23))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(108, 108, 108)
                                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                            .addComponent(jcProveedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtCodigo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDescripcion))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10))
        );

        jbAgregar.setBackground(new java.awt.Color(69, 99, 123));
        jbAgregar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jbAgregar.setText("AGREGAR");
        jbAgregar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        jTable1.setEnabled(true);
        jtBusqueda.setEnabled(true);
        jtCodigo.setEnabled(true);
        jtDescripcion.setEnabled(true);
        jcCategoria.setEnabled(true);
        jcProveedor.setEnabled(true);
        jtVenta.setEnabled(true);
        jtNombre.setEnabled(true);
        jtCantidad.setEnabled(true);
        jtCantidad.setText("");
        jtCodigo.setText("");
        jtDescripcion.setText("");
        jtVenta.setText("");
        jtNombre.setText("");
        jtBusqueda.setText("");
        condicion = 2;
        cargarCategoria();
        jcCategoria.revalidate();
        cargarProveedor();
        jcProveedor.revalidate();
        jcProveedor.repaint();
        cargar_todo();
        limpiarTabla(jTable1.getRowCount());
        jbBuscar.setEnabled(true);
        jbModificar.setEnabled(false);
        jbEliminar.setEnabled(true);
        jtBusqueda.requestFocus();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed

        jTable1.setEnabled(true);
        jtBusqueda.setEnabled(true);
        jtCodigo.setEnabled(false);
        jtDescripcion.setEnabled(false);
        jcCategoria.setEnabled(false);
        jcProveedor.setEnabled(false);
        jtVenta.setEnabled(false);
        jtNombre.setEnabled(false);
        jtCantidad.setEnabled(false);
        jtCantidad.setText("");
        jtCodigo.setText("");
        jtDescripcion.setText("");
        jtVenta.setText("");
        jtNombre.setText("");
        jtBusqueda.setText("");
        limpiarTabla(jTable1.getRowCount());
        jbBuscar.setEnabled(true);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(false);
        condicion = 3;
        cargarCategoria();
        jcCategoria.revalidate();
        cargarProveedor();
        jcProveedor.revalidate();
        jcProveedor.repaint();
        cargar_todo();
        jtBusqueda.requestFocus();
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed

        if (condicion == 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna operación a realizar!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (condicion == 1) {
            guardar();
        }

        if (condicion == 2) {
            modificar();
        }

        if (condicion == 3) {
            eliminar();
        }
    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        condicion = 0;
        jbBuscar.setEnabled(true);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        bloqueo_general();
        jtCodigo.setEnabled(false);
        jtDescripcion.setEnabled(false);
        jcCategoria.setEnabled(false);
        jcProveedor.setEnabled(false);
        cargarProveedor();
        cargarCategoria();
        jtVenta.setEnabled(false);
        jtNombre.setEnabled(false);
        jtCantidad.setEnabled(false);
        jtCantidad.setText("");
        jtCodigo.setText("");
        jtDescripcion.setText("");
        jtVenta.setText("");
        jtNombre.setText("");
        jtBusqueda.setText("");
        limpiarTabla(jTable1.getRowCount());
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBusquedaKeyReleased
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(tabla);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(jtBusqueda.getText().toUpperCase()));
    }//GEN-LAST:event_jtBusquedaKeyReleased

    private void jtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBusquedaKeyTyped
        char c4 = evt.getKeyChar();
        if (jtBusqueda.getText().length() >= 100) {
            evt.consume();
            getToolkit().beep();
        } else {
            boolean b = true;
            String letra = Character.toString(c4);
            String lineIwant = letra;
            String caracteres_permitidos = "[,\"\"/*-+@!&^%$()=|;:]";
            b = lineIwant.matches(caracteres_permitidos);
            if (b == true) {
                evt.consume();
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_jtBusquedaKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_dat = conectar.listar("*", "producto",
                    "where codigo = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "' and estado ='activo'");
            rs_dat.next();
            jtCodigo.setText(rs_dat.getString(2));
            jtDescripcion.setText(rs_dat.getString(3));
            ResultSet rs_marca1 = conectar.listar("nombre", "marca", "where idmarca = '" + rs_dat.getString(4) + "'");
            rs_marca1.next();
            jcCategoria.removeAllItems();
            jcCategoria.addItem(rs_marca1.getString(1));
            ResultSet rs_marca2 = conectar.listar("nombre", "marca", "where estado = 'activo'");
            while (rs_marca2.next() == true) {
                if (!rs_marca2.getString(1).equals(rs_marca1.getString(1))) {
                    jcCategoria.addItem(rs_marca2.getString(1));
                }
            }
            cargarProveedor();
            ResultSet rs_proveedor = conectar.listar("nombre", "proveedor", "where idproveedor = '" + rs_dat.getString("proveedor") + "'");
            rs_proveedor.next();
            jcProveedor.setSelectedItem(rs_proveedor.getString(1));
            jtVenta.setText("" + decimal.format(rs_dat.getInt(6)));
            jtNombre.setText("" + decimal.format(rs_dat.getInt(7)));
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCodigoKeyTyped
        char c4 = evt.getKeyChar();
        if (jtCodigo.getText().length() >= 40) {
            evt.consume();
            getToolkit().beep();
        } else {
            boolean b = true;
            String letra = Character.toString(c4);
            String lineIwant = letra;
            String caracteres_permitidos = "[,!?!¿¡|°';:]";
            b = lineIwant.matches(caracteres_permitidos);
            if (b == true) {
                evt.consume();
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_jtCodigoKeyTyped

    private void jtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDescripcionKeyTyped
        char c4 = evt.getKeyChar();
        if (jtDescripcion.getText().length() >= 140) {
            evt.consume();
            getToolkit().beep();
        } else {
            boolean b = true;
            String letra = Character.toString(c4);
            String lineIwant = letra;
            String caracteres_permitidos = "[,!?!¿¡|°';:]";
            b = lineIwant.matches(caracteres_permitidos);
            if (b == true) {
                evt.consume();
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_jtDescripcionKeyTyped

    private void jtVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtVentaKeyReleased
        jtVenta.setText(borrar_puntos(jtVenta.getText()));
        jtVenta.setText(separarMiles(jtVenta.getText()));
    }//GEN-LAST:event_jtVentaKeyReleased

    private void jtVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtVentaKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jtVentaKeyTyped

    private void jtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyReleased
        jtNombre.setText(borrar_puntos(jtNombre.getText()));
        jtNombre.setText(separarMiles(jtNombre.getText()));
    }//GEN-LAST:event_jtNombreKeyReleased

    private void jtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jtNombreKeyTyped

    private void jtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCantidadKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCantidadKeyReleased

    private void jtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCantidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCantidadKeyTyped

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        jTable1.setEnabled(false);
        jtBusqueda.setEnabled(false);
        jtCodigo.setEnabled(true);
        jtDescripcion.setEnabled(true);
        jcCategoria.setEnabled(true);
        jcProveedor.setEnabled(true);
        jtVenta.setEnabled(true);
        jtNombre.setEnabled(true);
        jtCantidad.setEnabled(true);
        jtCantidad.setText("0");
        jtDescripcion.setText("");
        jtVenta.setText("0");
        jtNombre.setText("0");
        jtBusqueda.setText("");
        jbBuscar.setEnabled(false);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        condicion = 1;
        cargarProveedor();
        jcProveedor.revalidate();
        jcProveedor.repaint();
        cargarCategoria();
        jcCategoria.revalidate();
        limpiarTabla(jTable1.getRowCount());
        jtCodigo.requestFocus();
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbBuscarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbBuscarKeyPressed

    private void jbBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbBuscarMouseClicked
        busqueda_producto buscar = new busqueda_producto();
        buscar.setVisible(true);
    }//GEN-LAST:event_jbBuscarMouseClicked

    private void jcCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductoUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox jcCategoria;
    private javax.swing.JComboBox jcProveedor;
    private javax.swing.JTextField jtBusqueda;
    private javax.swing.JTextField jtCantidad;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtVenta;
    // End of variables declaration//GEN-END:variables

    public void bloqueo_general() {
        jTable1.setEnabled(false);
        jtBusqueda.setEnabled(false);
        jtCodigo.setEnabled(false);
        jtDescripcion.setEnabled(false);
        jcCategoria.setEnabled(false);
        jcProveedor.setEnabled(false);
        jtVenta.setEnabled(false);
        jtNombre.setEnabled(false);
        jtCantidad.setEnabled(false);
    }

    public void cargarCategoria() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_marca = conectar.listarSinCondi("nombre", "categoria");
            jcCategoria.removeAllItems();
            while (rs_marca.next()) {
                String categoria = rs_marca.getString(1);
                jcCategoria.addItem(categoria);
                System.out.println("Categoría añadida: " + categoria); // Mensaje de depuración
            }
        } catch (Exception e) {
            e.printStackTrace(); // Mostrar la excepción en la consola
        } finally {
            conectar.Desconectado();
        }
    }
    
        public void cargarProveedor() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_marca = conectar.listarSinCondi("nombre", "proveedor");
            jcCategoria.removeAllItems();
            while (rs_marca.next()) {
                String proveedor = rs_marca.getString(1);
                jcCategoria.addItem(proveedor);
                System.out.println("Proveedor añadida: " + proveedor); // Mensaje de depuración
            }
        } catch (Exception e) {
            e.printStackTrace(); // Mostrar la excepción en la consola
        } finally {
            conectar.Desconectado();
        }
    }

    private String borrar_puntos(String num) {
        String valor = num;
        String valor2 = null;
        int largo = valor.length();
        if (largo >= 1) {
            valor2 = valor.replace(".", "");
        }
        return valor2;
    }

    private String separarMiles(String num) {
        String valor = num;
        int largo = valor.length();
        if (largo > 8) {
            valor = valor.substring(largo - 9, largo - 6) + "." + valor.substring(largo - 6, largo - 3) + "." + valor.substring(largo - 3, largo);
        } else if (largo > 7) {
            valor = valor.substring(largo - 8, largo - 6) + "." + valor.substring(largo - 6, largo - 3) + "." + valor.substring(largo - 3, largo);
        } else if (largo > 6) {
            valor = valor.substring(largo - 7, largo - 6) + "." + valor.substring(largo - 6, largo - 3) + "." + valor.substring(largo - 3, largo);
        } else if (largo > 5) {
            valor = valor.substring(largo - 6, largo - 3) + "." + valor.substring(largo - 3, largo);
        } else if (largo > 4) {
            valor = valor.substring(largo - 5, largo - 3) + "." + valor.substring(largo - 3, largo);
        } else if (largo > 3) {
            valor = valor.substring(largo - 4, largo - 3) + "." + valor.substring(largo - 3, largo);
        }
        return valor;
    }

    public void limpiarTabla(int filas) {
        try {
            if (filas > 0) {
                tabla.setRowCount(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }

    public void cargar_todo() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            limpiarTabla(jTable1.getRowCount());
            ResultSet rs_dat = conectar.listar("codigo,descripcion", "producto",
                    "where estado = 'activo' order by idproducto desc");
            while (rs_dat.next() == true) {
                String[] datos = new String[3];
                datos[0] = rs_dat.getString(1).toUpperCase();
                datos[1] = rs_dat.getString(2).toUpperCase();
                datos[2] = rs_dat.getString(3).toUpperCase();
                tabla.addRow(datos);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public boolean control_codigo() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        boolean resp = true;
        try {
            ResultSet rs_codigo = conectar.listar("*", "producto", "where codigo = '" + jtCodigo.getText() + "' and estado = 'activo'");
            if (rs_codigo.next() == true) {
                resp = true;
            } else {
                resp = false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error Control Código: " + e.getMessage());
        }
        conectar.Desconectado();
        return resp;
    }

    public boolean control_codigo_modificacion() {
        boolean resp = true;
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_codigo = conectar.listar("*", "producto", "where codigo = '" + jtCodigo.getText() + "' and estado = 'activo'");
            if (rs_codigo.next() == true) {
                if (jtCodigo.getText().equals(jTable1.getValueAt(jTable1.getSelectedRow(), 0))) {
                    resp = false;
                } else {
                    resp = true;
                }
            } else {
                resp = false;
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
        return resp;
    }

    public boolean control_campos_obligatorios() {
        boolean resp = true;

        if (jtCodigo.getText().equals("")) {
            resp = false;
        }

        if (jtDescripcion.getText().equals("")) {
            resp = false;
        }

        if (jtVenta.getText().equals("")) {
            resp = false;
        }

        if (jtCantidad.getText().equals("")) {
            resp = false;
        }

        if (jtNombre.getText().equals("")) {
            resp = false;
        }

        return resp;
    }

    public boolean control_compra_venta() throws ParseException {
        int venta = Integer.parseInt("" + decimal.parse(jtVenta.getText()));
        int compra = Integer.parseInt("" + decimal.parse(jtNombre.getText()));
        boolean resp = true;
        if (venta > compra) {
            resp = true;
        } else {
            resp = false;
        }

        return resp;
    }

    public void guardar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            if (control_campos_obligatorios() == true) {
                conectar.guardar("producto(idproducto,idcategoria,idproveedor,nombre,descripcion,"
                        + "precio,stk_cant,estado)",
                        "'" + jtCodigo.getText() + "','"
                        + jcCategoria.getSelectedIndex() + "','"
                        + jcProveedor.getSelectedIndex() + "','"
                        + jtNombre.getText() + "','"
                        + jtDescripcion.getText() + "','"
                        + decimal.parse(jtVenta.getText()) + "','"
                        + jtCantidad.getText() + "','"
                        //+ unidad_de_medida + "','"
                        // + seleccion_promo + "','"
                        //+ cantidad_promo + "','"
                        //+ precio_promo + "','"
                        + jtCantidad.getText() + "'");
                //+ rs_proveedor.getString(1) + "'");
                JOptionPane.showMessageDialog(null, "Producto cargado con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                condicion = 0;
                bloqueo_general();
                jtCodigo.setEnabled(false);
                jtDescripcion.setEnabled(false);
                jcCategoria.setEnabled(false);
                jcProveedor.setEnabled(false);
                jcCategoria.removeAllItems();
                jcProveedor.removeAllItems();
                jtVenta.setEnabled(false);
                jtNombre.setEnabled(false);
                jtCantidad.setEnabled(false);
                jtCantidad.setText("");
                jtCodigo.setText("");
                jtDescripcion.setText("");
                jtVenta.setText("0");
                jtNombre.setText("0");
                jtBusqueda.setText("");
                limpiarTabla(jTable1.getRowCount());
                jbBuscar.setEnabled(true);
                jbModificar.setEnabled(true);
                jbEliminar.setEnabled(true);
                cargar_todo();
            } else {
                JOptionPane.showMessageDialog(null, "El precio de compra no puede ser mayor que el de venta!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar: " + e.getMessage());
        }
        conectar.Desconectado();
    }

    public void modificar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            if (control_campos_obligatorios() == true) {
                if (control_codigo_modificacion() == false) {
                    if (control_compra_venta() == true) {
                        ResultSet rs_marca = conectar.listar("idmarca", "marca", "where nombre = '" + jcCategoria.getSelectedItem() + "'");
                        rs_marca.next();
                        String unidad_de_medida = "UNIDAD";

                        ResultSet rs_proveedor = conectar.listar("idproveedor", "proveedor", "where nombre = '" + jcProveedor.getSelectedItem() + "'");
                        rs_proveedor.next();

                        if (jtCodigo.getText().isEmpty()) {
                            conectar.actualizar("producto",
                                    "codigo = '" + jtCodigo.getText() + "', "
                                    + "descripcion = '" + jtDescripcion.getText() + "', "
                                    + "marca = '" + rs_marca.getString(1) + "', "
                                    + "proveedor = '" + rs_proveedor.getString(1) + "', "
                                    + "cantidad_pack = '" + jtCantidad.getText() + "', "
                                    + "precio_venta= '" + decimal.parse(jtVenta.getText()) + "', "
                                    + "precio_compra = '" + decimal.parse(jtNombre.getText()) + "', ");
                        }
                        JOptionPane.showMessageDialog(null, "Producto modificado con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        condicion = 0;
                        bloqueo_general();
                        jtCodigo.setEnabled(false);
                        jtDescripcion.setEnabled(false);
                        jcCategoria.setEnabled(false);
                        jcProveedor.setEnabled(false);
                        jcCategoria.removeAllItems();
                        jcProveedor.removeAllItems();
                        jtVenta.setEnabled(false);
                        jtNombre.setEnabled(false);
                        jtCantidad.setEnabled(false);
                        jtCantidad.setText("0");
                        jtCodigo.setText("");
                        jtDescripcion.setText("");
                        jtVenta.setText("0");
                        jtNombre.setText("0");
                        jtBusqueda.setText("");
                        limpiarTabla(jTable1.getRowCount());
                        jbBuscar.setEnabled(true);
                        jbModificar.setEnabled(true);
                        jbEliminar.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "El precio de compra no puede ser mayor que el de venta!!!", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El codigo de este Producto/Servicio ya existe!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void eliminar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            conectar.actualizar("producto",
                    "descripcion = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 1) + "'");
            JOptionPane.showMessageDialog(null, "Producto/Servicio eliminado con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            condicion = 0;
            jbBuscar.setEnabled(true);
            bloqueo_general();
            jtCantidad.setEnabled(false);
            jtCantidad.setText("0");
            jtCodigo.setText("");
            jtDescripcion.setText("");
            jtVenta.setText("0");
            jtBusqueda.setText("");
            jbBuscar.setEnabled(true);
            jbModificar.setEnabled(true);
            jbEliminar.setEnabled(true);
            limpiarTabla(jTable1.getRowCount());
            jcProveedor.setEnabled(false);
            jcCategoria.removeAllItems();
            jcProveedor.removeAllItems();

        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

}
