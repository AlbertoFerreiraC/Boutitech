/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Usuarios;

import DataBase.ConectoBD;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;

/**
 *
 * @author Alberto
 */
public class UsuariosUi extends javax.swing.JFrame {

    DecimalFormat decimal = new DecimalFormat("###,###,###.##");
    int condicion = 0;
    DefaultTableModel tabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int rowIndex, int colIndex) {
            return false;
        }
    };

    /**
     * Creates new form Usuarios
     */
    public UsuariosUi() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 255, 255));
        bloqueo_general();
        jTable1.setModel(tabla);
        jTable1.setVisible(true);
        cargarTitulos();
        cargarRol();
        cargar_usuario();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbAgregar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jcRol = new javax.swing.JComboBox();
        jtpass = new javax.swing.JPasswordField();
        jLabel15 = new javax.swing.JLabel();
        jtRepPass = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jtBusqueda = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jbAceptar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("USUARIOS");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51)));

        jbAgregar.setBackground(new java.awt.Color(69, 99, 123));
        jbAgregar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jbAgregar.setText("AGREGAR");
        jbAgregar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbModificar.setBackground(new java.awt.Color(69, 99, 123));
        jbModificar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(255, 255, 255));
        jbModificar.setText("MODIFICAR");
        jbModificar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setBackground(new java.awt.Color(69, 99, 123));
        jbEliminar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbEliminar.setText("ELIMINAR");
        jbEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)), "Detalle de Usuarios", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Monospaced", 0, 12))); // NOI18N

        jtNombre.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jtNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtNombreKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Rol:");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Contraseña:");

        jcRol.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jcRol.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        jtpass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtpass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Rep. Contraseña:");

        jtRepPass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtRepPass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtNombre))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtpass)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtRepPass))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcRol, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcRol, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtpass, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtRepPass, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)), "Busqueda de Usuarios", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Monospaced", 0, 13), new java.awt.Color(51, 51, 51))); // NOI18N

        jtBusqueda.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jtBusqueda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBusqueda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtBusquedaKeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(255, 102, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Busqueda de Usuario:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtBusqueda)))
                .addGap(1, 1, 1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
        );

        jbAceptar.setBackground(new java.awt.Color(69, 99, 123));
        jbAceptar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbAceptar.setForeground(new java.awt.Color(255, 255, 255));
        jbAceptar.setText("ACEPTAR");
        jbAceptar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jbCancelar.setBackground(new java.awt.Color(69, 99, 123));
        jbCancelar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jbCancelar.setText("CANCELAR");
        jbCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(69, 99, 123));
        jbSalir.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("SALIR");
        jbSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 622, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        condicion = 1;
        jTable1.setEnabled(false);
        jtBusqueda.setEnabled(false);
        jtNombre.setEnabled(true);
        jtpass.setEnabled(true);
        jtRepPass.setEnabled(true);
        jtpass.setText("");
        jtRepPass.setText("");
        limpiarTabla(jTable1.getRowCount());
        jtNombre.setText("");
        jtBusqueda.setText("");
        jbAgregar.setEnabled(false);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        cargarRol();
        jtNombre.requestFocus();
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        condicion = 2;
        jTable1.setEnabled(true);
        jtBusqueda.setEnabled(true);
        jtNombre.setEnabled(true);
        jtpass.setEnabled(true);
        jtRepPass.setEnabled(true);
        jtpass.setText("");
        jtRepPass.setText("");
        limpiarTabla(jTable1.getRowCount());
        jtNombre.setText("");
        jtBusqueda.setText("");
        jbAgregar.setEnabled(true);
        jbModificar.setEnabled(false);
        jbEliminar.setEnabled(true);
        cargarRol();
        cargar_todo();
        jtBusqueda.requestFocus();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        condicion = 3;
        jTable1.setEnabled(true);
        jtBusqueda.setEnabled(true);
        jtNombre.setEnabled(false);
        jtpass.setEnabled(false);
        jtRepPass.setEnabled(false);
        jtpass.setText("");
        jtRepPass.setText("");
        limpiarTabla(jTable1.getRowCount());
        jtNombre.setText("");
        jtBusqueda.setText("");
        jbAgregar.setEnabled(true);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(false);
        cargar_todo();
        jtBusqueda.requestFocus();
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyTyped
        char c4 = evt.getKeyChar();
        if (jtNombre.getText().length() >= 70) {
            evt.consume();
            getToolkit().beep();
        } else {
            boolean b = true;
            String letra = Character.toString(c4);
            String lineIwant = letra;
            String caracteres_permitidos = "[,\"\"/*--+@!?!¿¡|°'#&^%$()=|;:]";
            b = lineIwant.matches(caracteres_permitidos);
            if (b == true) {
                evt.consume();
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_jtNombreKeyTyped

    private void jtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBusquedaKeyReleased
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(tabla);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(jtBusqueda.getText().toUpperCase()));
    }//GEN-LAST:event_jtBusquedaKeyReleased

    private void jtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBusquedaKeyTyped
        char c4 = evt.getKeyChar();
        if (jtBusqueda.getText().length() >= 100) {
            evt.consume();
            getToolkit().beep();
        } else {
            boolean b = true;
            String letra = Character.toString(c4);
            String lineIwant = letra;
            String caracteres_permitidos = "[,\"\"/*-+@!&^%$()=|;:]";
            b = lineIwant.matches(caracteres_permitidos);
            if (b == true) {
                evt.consume();
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_jtBusquedaKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_dat = conectar.listar("*", "usuario",
                    "where idusuario = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            if (rs_dat.next() == true) {
                jtNombre.setText(rs_dat.getString(3));
                jtpass.setText(decrypt(rs_dat.getString(4)));
                jtRepPass.setText(decrypt(rs_dat.getString(4)));
                int rol = rs_dat.getInt(2);
                jcRol.removeAllItems();
                ResultSet rs_marca_ant = conectar.listar("nombre", "rol", "where idrol = '" + rol + "'");
                rs_marca_ant.next();
                jcRol.addItem(rs_marca_ant.getString(1));
                ResultSet rs_marca = conectar.listar("idrol,nombre", "rol", "where estado = 'activo'");
                while (rs_marca.next() == true) {
                    if (rs_marca.getInt(1) != rol) {
                        jcRol.addItem(rs_marca.getString(2));
                    }
                }

            }

        } catch (Exception e) {
        }
        conectar.Desconectado();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed

        if (condicion == 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna operación a realizar!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (condicion == 1) {
            guardar();
        }

        if (condicion == 2) {
            modificar();
        }

        if (condicion == 3) {
            eliminar();
        }
    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        condicion = 0;
        jbAgregar.setEnabled(true);
        jbModificar.setEnabled(true);
        jbEliminar.setEnabled(true);
        bloqueo_general();
        jtNombre.setText("");
        jtBusqueda.setText("");
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuariosUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuariosUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuariosUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuariosUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuariosUi().setVisible(true);
            }
        });
    }

    public void bloqueo_general() {
        jTable1.setEnabled(false);
        jtBusqueda.setEnabled(false);
        jtNombre.setEnabled(false);
        jtpass.setEnabled(false);
        jtRepPass.setEnabled(false);
    }

    private void cargarTitulos() {

        String[] titulos;
        try {
            titulos = new String[3];
            titulos[0] = "Nro. Usuario";
            titulos[1] = "Nombre de Usuario";
            titulos[2] = "Rol Asignado";
            tabla.setColumnIdentifiers(titulos);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No carga lista de planilla" + e.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);

        }

    }

    public void cargarRol() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_marca = conectar.listar("nombre", "rol", "where estado = 'activo'");
            jcRol.removeAllItems();
            while (rs_marca.next() == true) {
                jcRol.addItem(rs_marca.getString(1));
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void cargar_usuario() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_marca = conectar.listar("nombre", "usuario", "where estado = 'activo'");
            while (rs_marca.next() == true) {
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void limpiarTabla(int filas) {
        try {
            if (filas > 0) {
                tabla.setRowCount(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }

    public void cargar_todo() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            limpiarTabla(jTable1.getRowCount());
            ResultSet rs_dat = conectar.listar("idusuario,nombre,rol", "usuario",
                    "where estado = 'activo' order by idusuario desc");
            while (rs_dat.next() == true) {
                String[] datos = new String[3];
                datos[0] = rs_dat.getString(1);
                datos[1] = rs_dat.getString(2).toUpperCase();
                datos[2] = rs_dat.getString(3);
                tabla.addRow(datos);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public String encrypt(String cadena) {
        StandardPBEStringEncryptor s = new StandardPBEStringEncryptor();
        s.setPassword("uniquekey");
        return s.encrypt(cadena);
    }

    public static String decrypt(String cadena) {
        StandardPBEStringEncryptor s = new StandardPBEStringEncryptor();
        s.setPassword("uniquekey");
        String devuelve = "";
        try {
            devuelve = s.decrypt(cadena);
        } catch (Exception e) {
        }
        return devuelve;
    }

    public void guardar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            if (control_campos_obligatorios() == true) {
                if (control_codigo() == false) {
                    if (control_pass() == true) {
                        ResultSet rs_rol = conectar.listar("idrol", "rol", "where nombre = '" + jcRol.getSelectedItem() + "'");
                        rs_rol.next();
                        conectar.guardar("usuario(rol,nombre,pass,estado)",
                                "'" + rs_rol.getString(1) + "','"
                                + jtNombre.getText() + "','"
                                + encrypt(jtpass.getText()) + "','activo'");
                        ResultSet rs_lis = conectar.listar_especial("select max(idusuario) from usuario");
                        rs_lis.next();
                        crear_apertura(rs_lis.getString(1));
                        JOptionPane.showMessageDialog(null, "Usuario cargado con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        condicion = 0;
                        bloqueo_general();
                        jtNombre.setText("");
                        jtBusqueda.setText("");
                        jtpass.setText("");
                        jtRepPass.setText("");
                        jbAgregar.setEnabled(true);
                        jbModificar.setEnabled(true);
                        jbEliminar.setEnabled(true);
                        cargarRol();
                        cargar_usuario();
                        limpiarTabla(jTable1.getRowCount());
                    } else {
                        JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden!!!", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El nombre de usuario ya existe!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void modificar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            if (control_campos_obligatorios() == true) {
                if (control_codigo_modificacion() == false) {
                    if (control_pass() == true) {
                        ResultSet rs_rol = conectar.listar("idrol", "rol", "where nombre = '" + jcRol.getSelectedItem() + "'");
                        rs_rol.next();
                        conectar.actualizar("usuario",
                                "rol = '" + rs_rol.getString(1) + "', "
                                + "nombre = '" + jtNombre.getText() + "', "
                                + "pass = '" + encrypt(jtpass.getText()) + "'",
                                "idusuario = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
                        JOptionPane.showMessageDialog(null, "Usuario modificado con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        condicion = 0;
                        bloqueo_general();
                        jtNombre.setText("");
                        jtBusqueda.setText("");
                        jtpass.setText("");
                        jtRepPass.setText("");
                        jbAgregar.setEnabled(true);
                        jbModificar.setEnabled(true);
                        jbEliminar.setEnabled(true);
                        cargarRol();
                        cargar_usuario();
                        limpiarTabla(jTable1.getRowCount());
                    } else {
                        JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden!!!", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El nombre de usuario ya existe!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe completar todos los campos obligatorios!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public void eliminar() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            conectar.actualizar("usuario",
                    "estado = 'inactivo'",
                    "idusuario = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            JOptionPane.showMessageDialog(null, "Usuario eliminado con exito!!!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            condicion = 0;
            bloqueo_general();
            jtNombre.setText("");
            jtBusqueda.setText("");
            jtpass.setText("");
            jtRepPass.setText("");
            jbAgregar.setEnabled(true);
            jbModificar.setEnabled(true);
            jbEliminar.setEnabled(true);
            cargarRol();
            cargar_usuario();
            limpiarTabla(jTable1.getRowCount());
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public boolean control_codigo() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        boolean resp = true;
        try {
            ResultSet rs_codigo = conectar.listar("*", "usuario", "where nombre = '" + jtNombre.getText() + "' and estado = 'activo'");
            if (rs_codigo.next() == true) {
                resp = true;
            } else {
                resp = false;
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
        return resp;
    }

    public boolean control_codigo_modificacion() {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        boolean resp = true;
        try {
            ResultSet rs_codigo = conectar.listar("*", "usuario", "where nombre = '" + jtNombre.getText() + "' and estado = 'activo'");
            if (rs_codigo.next() == true) {
                if (jtNombre.getText().equals(jTable1.getValueAt(jTable1.getSelectedRow(), 0))) {
                    resp = true;
                } else {
                    resp = false;
                }
            } else {
                resp = false;
            }
        } catch (Exception e) {
        }
        conectar.Desconectado();
        return resp;
    }

    public boolean control_campos_obligatorios() {
        boolean resp = true;
        if (jtNombre.getText().equals("")) {
            resp = false;
        }
        return resp;
    }

    public void crear_apertura(String id_usuario) {
        ConectoBD conectar = new ConectoBD();
        conectar.Conectado();
        try {
            ResultSet rs_fecha = conectar.listar_especial("select curdate()");
            rs_fecha.next();
            ResultSet rs_hora = conectar.listar_especial("select DATE_FORMAT(NOW( ), \"%H:%i:%S\" )");
            rs_hora.next();
            conectar.guardar("apertura_cierre_de_caja(fecha,hora_apertura,saldo_al_cierre_dia,estado,usuario)",
                    "'" + "2018-10-12" + "','"
                    + rs_hora.getString(1) + "','"
                    + "0" + "','"
                    + "cerrado" + "','" + id_usuario + "'");
        } catch (Exception e) {
        }
        conectar.Desconectado();
    }

    public boolean control_pass() {
        boolean res = true;
        if (jtpass.getText().equals(jtRepPass.getText())) {
            res = true;
        } else {
            res = false;
        }
        return res;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox jcRol;
    private javax.swing.JTextField jtBusqueda;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JPasswordField jtRepPass;
    private javax.swing.JPasswordField jtpass;
    // End of variables declaration//GEN-END:variables
}
